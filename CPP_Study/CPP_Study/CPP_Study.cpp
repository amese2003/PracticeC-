#include <iostream>

using namespace std;

// float ?
// 3.1415926535
// 점 앞/뒤?


// 부동 소수점 부동(不動 X) (浮動)
// .을 유동적으로 움직여서 표현하는 방법

// 3.1415926535
// 0.31415926535 * 10

// 1) 정규화 = 0.31415926535 * 10
// 2) 31415926535 (유효숫자) 1 (지수)

// float 부호(1) 지수(8) 유효숫자(23) = 32비트 = 4바이트
// double 부호(1) 지수(11) 유효숫자(52) = 64비트 = 8바이트

// ex) -3.375
// 1) 2진수 변환 = (3) + (0.375) = 0b11 + 0b0.011 = 0b11.011
// 0.375 = 0.5 * 0 + 0.25 + 1  0b0.011
// 2) 정규화 0b1.1011 * 2 ^ 1
// 1(부호) 1(지수) 1011(유효숫자)
// 단 지수는 unsigned byte라고 가정하고 숫자 + 127 만들어줌
// 예상 결과 : 0b 1 10000000 1011000 0000 0000 0000 0000

// 프로그래밍 할 때 부동소수점은 어디까지나 근사값이다.

float attackSpeed = -3.375f;
double attackSpeed2 = 123.4123;

int main()
{
    std::cout << "Hello World!\n";

    cout << attackSpeed << endl;

    return 0;
}