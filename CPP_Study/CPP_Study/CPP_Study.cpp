#include <iostream>

using namespace std;

// 오늘의 주제 : 포인터

void SetHp(int* hp) {
	*hp = 100;

	cout << hp << endl;
	cout << *hp << endl;
}


int main() {
	int number = 1;

	int hp;

	cout << &hp << endl;
	SetHp(&hp);

	cout << "수정 끝"  << hp << endl;


	// 바구니는 바구니인데...
	// [주소를 저장하는 바구니다!]
	// 변수 선언할 때 * 등장했다? -> 포인터 = 주소
	// 참고) 포인터라는 바구니는 4바이트(32비트) 8바이트(64비트) 고정크기
	int* ptr = &number;

	// 근데 남의 주소를 가지고 뭘 하라는거지?
	// 추가 문법 : [주소 저장 바구니가]가리키는 주소로 가서 무엇인가 해라!
	// *변수이름 = 값

	// 포탈을 타고 순간이동 한다고 생각보자.
	// *이 여러번 등장하니 헷갈리는데, 사용 시점에 따라서 구분해서 기억해보자.
	// - 변수 선언 (주소를 저장하는 바구니!)
	// - 사용할 때 (포탈 타고 순간이동)

	int value1 = *ptr;
	*ptr = 2;

	// TYPE은 왜 붙일까?
	// * = 포인터의 의미 = 주소를 저장하는 바구니 = 4/8바이트 고정 크기
	// 그럼 int는 왜?


	// 주소에 가면 뭐가 있는데?
	// ex) 결혼식 청접장에 있는 주소 = 예식장 주소
	// ex) 명함에 있는 주소 = 회사 주소
	// * = 포인터 (주소 담는 바구니)

	// 타입의 불일치?
	__int64* ptr2 = (__int64*)&number;

	return 0;
}

